#!/bin/sh

# PROVIDE: argus
# REQUIRE: DAEMON NETWORKING
# BEFORE: LOGIN
# KEYWORD: shutdown

. /etc/rc.subr

name=argus
rcvar=argus_enable

load_rc_config $name

: ${argus_enable:="NO"}
: ${argus_user:="argus"}
: ${argus_group:="argus"}
: ${argus_config:="@CMAKE_INSTALL_PREFIX@/etc/argus.json"}
: ${argus_pidfile:="/var/run/argus.pid"}
: ${argus_logfile:="/var/log/argus.log"}
: ${argus_flags:=""}

# Additional runtime directories
: ${argus_rundir:="/var/run"}
: ${argus_logdir:="/var/log"}

pidfile="${argus_pidfile}"
command="@CMAKE_INSTALL_PREFIX@/bin/argus"
command_args="-d -l ${argus_logfile} ${argus_config} ${argus_flags}"
command_interpreter=""

start_precmd="argus_prestart"
stop_postcmd="argus_poststop"
reload_cmd="argus_reload"
status_cmd="argus_status"
extra_commands="reload"

argus_prestart() {
    # Create necessary directories
    if [ ! -d "${argus_rundir}" ]; then
        install -d -o ${argus_user} -g ${argus_group} -m 755 "${argus_rundir}"
    fi

    if [ ! -d "${argus_logdir}" ]; then
        install -d -o ${argus_user} -g ${argus_group} -m 755 "${argus_logdir}"
    fi

    # Ensure PID directory is writable
    install -d -o ${argus_user} -g ${argus_group} -m 755 $(dirname "${pidfile}")

    # Check configuration file
    if [ ! -f "${argus_config}" ]; then
        err 1 "Configuration file ${argus_config} does not exist"
    fi

    # Check daemon executable
    if [ ! -x "${command}" ]; then
        err 1 "Daemon ${command} not found or not executable"
    fi

    # Set capabilities for ping functionality (FreeBSD specific)
    if ! /usr/bin/proccontrol -m aslr -s disable "${command}" >/dev/null 2>&1; then
        warn "Failed to set process control options for ASLR"
    fi

    # Check for ping group permissions
    if ! sysctl net.inet.icmp.icmplim_output >/dev/null 2>&1; then
        warn "ICMP permissions may not be properly configured"
        warn "Consider running: sysctl net.inet.icmp.icmplim_output=0"
    fi
}

argus_poststop() {
    # Clean up PID file
    if [ -f "${pidfile}" ]; then
        rm -f "${pidfile}"
    fi

    # Clean up any stale lock files
    if [ -f "/var/run/${name}.lock" ]; then
        rm -f "/var/run/${name}.lock"
    fi
}

argus_reload() {
    if [ -f "${pidfile}" ]; then
        PID=$(cat "${pidfile}")
        if kill -0 $PID >/dev/null 2>&1; then
            echo "Reloading ${name} configuration (PID: $PID)"
            kill -HUP $PID
            return $?
        else
            echo "${name} is not running"
            return 1
        fi
    else
        echo "${name} is not running (no PID file)"
        return 1
    fi
}

argus_status() {
    if [ -f "${pidfile}" ]; then
        PID=$(cat "${pidfile}")
        if kill -0 $PID >/dev/null 2>&1; then
            echo "${name} is running (PID: $PID)"
            return 0
        else
            echo "${name} is not running (stale PID file)"
            return 1
        fi
    else
        echo "${name} is not running"
        return 1
    fi
}

# Set process user/group
command_user="${argus_user}:${argus_group}"

# FreeBSD-specific daemon options
if [ -n "$argus_facility" ]; then
    command_args="$command_args --syslog-facility=$argus_facility"
fi

# Handle custom installation prefix in PATH
export PATH="@CMAKE_INSTALL_PREFIX@/bin:$PATH"

run_rc_command "$1"